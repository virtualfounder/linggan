import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as r,c as s,a as i,b as t,d as l,f as o}from"./app-Dc2iKeFD.js";const h={},c=i("h1",{id:"git-github-学习路线-by-灵感虚拟发现现实",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#git-github-学习路线-by-灵感虚拟发现现实"},[i("span",null,"Git & GitHub 学习路线 by 灵感虚拟发现现实")])],-1),p={href:"https://www.zzxxccvv.xyz",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.zzxxccvv.xyz",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.bilibili.com/video/BV1KZ4y1e7cG",target:"_blank",rel:"noopener noreferrer"},b=o('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><h3 id="git-github-是什么" tabindex="-1"><a class="header-anchor" href="#git-github-是什么"><span>Git / GitHub 是什么？</span></a></h3><p>Git 是目前最主流的 <code>分布式版本控制系统</code> （Version Control System），是团队协作开发不可或缺的工具。它可以保存和管理文件的所有更新记录、并且使用 <strong>版本号</strong> 进行区分。从而支持将编辑后的文档恢复到修改前的状态（历史版本）、对比不同版本的文件差异、防止旧版本覆盖新版本等功能。</p><p>GtiHub 是目前最主流的、免费的 <code>代码开源托管平台</code> ，可以理解为一个存储和管理代码的 “网盘”。所有用户或团队都可以把自己的代码上传到 GitHub 进行共享和维护、从 GitHub 下载代码等。开发者们可以从 GitHub 上白嫖代码，进行学习或引用。</p><p>很多同学刚开始容易把这两个概念搞混，其实很好区分，Git 和 GitHub 的区别和关系如下：</p><ol><li>Git 是工具，而 GitHub 是平台。</li><li>我们可以用 Git 之外的版本控制系统（比如 SVN）来向 GitHub 提交代码；同样可以用 Git 将代码提交到 GitHub 之外的其他代码托管平台（比如企业级代码托管平台 GitLab）上。</li></ol><blockquote><p>SVN 和 Git  是同类的工具，两者的用法很相似。但目前 Git 相对更主流一些，因此只学习 Git 足够了。</p></blockquote><h3 id="为什么要用-git-github" tabindex="-1"><a class="header-anchor" href="#为什么要用-git-github"><span>为什么要用 Git / GitHub？</span></a></h3><h4 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>Git</span></a></h4><p>Git 起初是由 Linux 的创始人 Linus Torvalds 为了更好地管理 Linux 内核开发而创立的。Linux 的内核开发极其复杂，我们可以试想一下，如果有 100 个人要共同来开发这样一个大型项目、维护同一个代码目录和文件，怎么样才能够保证大家的代码不重复、不冲突、即时共享呢？难道要把代码放到 U 盘里，每个人写完代码后再拷贝到别人电脑上么？</p><p>肯定不行对吧，这样做不仅麻烦，而且只能人为去解决冲突，可能会出现下面的对话：</p><p>A：“哎，这行我改了，你别改！”</p><p>B：“TNND，你改了也不跟我说一声。”</p><p>所以 Git 的出现正是为了解决上述难题。</p><p>使用 Git 工具，大家可以很方便地拉取和提交代码、及时得到代码的修改信息、对比新老代码之间的差异等，让系统代替人工来自动检查和解决冲突。从而提高团队协作开发的效率，保证代码和项目的稳定推进。</p><p>除了团队开发外，我们自己做项目时也可以用 Git 来管理代码，如果一不小心改错或者删除了文件，可以快速还原。</p><p>因此 Git 也是目前开发岗同学 <strong>必学</strong> 的技能，企业开发的基本功。</p><h4 id="github" tabindex="-1"><a class="header-anchor" href="#github"><span>GitHub</span></a></h4><p>既然要团队协作开发，那么大家肯定要 <strong>共享代码</strong> ，在同一套代码的基础上进行开发。所以需要一个集中存储和管理代码的地方，所有团队成员都能访问到。而且不同于网盘，最好大家能使用 Git 工具来操作代码的上传和拉取，并且在平台上方便地浏览和对比代码。</p><p>于是，有能力的公司开始自己建设公司内部的代码托管平台。但是对大多数小公司来说，他们没有这种条件自建，只能依赖其他大公司的代码托管服务。</p><p>此外，在 Linux 之父以及很多优秀程序员的影响下，越来越多的程序员倡导 <strong>开源</strong> ，认为软件开发应当是开放的，所有开发者都可以加入贡献。而开源的背后，必须要有一个开放共享的代码托管平台来支撑，而不是每个公司的代码都被封闭在自己内部的平台上。</p><p>于是，以 GitHub 为代表的代码托管平台出现了。团队可以利用 GitHub 进行协作开发；开发者可以轻松阅读并参与到世界知名的开源项目中；我们每位同学也都可以免费使用 GitHub 上的代码，站在巨人的肩膀上打造自己的项目，或者通过参与开源来提升个人影响力等。</p><p>此外，如今的 GitHub 还提供了更多强大的功能，比如问题讨论、在线编程、托管网站、自动构建项目等，对开发者非常有帮助。除了代码外，灵感虚拟发现现实也经常把一些需要团队内共享的文档上传到 GitHub 私仓和其他成员协作，免费无限制谁不爱呢？</p><p>当然，GitHub 只是代码托管平台中最有代表性的一个，其他知名的代码开源托管平台有国内的 Gitee、国外的 Bitbucket 等；面向企业的私有代码托管平台有 GitLab、腾讯工蜂等。它们没有什么本质的区别，都是平台而已，会用 GitHub，就会用其他的。</p><p>综上，强烈建议大家养成使用 GitHub 的习惯，感受开源的魅力。</p><h2 id="学习条件" tabindex="-1"><a class="header-anchor" href="#学习条件"><span>学习条件</span></a></h2><ol><li>学过至少一门编程语言后就可以学习 Git 了</li><li>准备开发个人完整项目前建议学习。注意是完整项目，还停留在初学编程语言写练习阶段的同学先不用学，抓紧熟悉编程语言就好。</li><li>正式找工作前必须学习！</li></ol><h2 id="学习建议" tabindex="-1"><a class="header-anchor" href="#学习建议"><span>学习建议</span></a></h2><ol><li>Git 只是工具，学 Git 的时候可以轻松一些，千万不要去背命令！初学者只要先了解工作中常用命令的作用、提交代码的流程，然后跟着教程实操一遍，有个大致的印象就够了。忘了的话就掏出说明书（百度 / 文档等），随用随查即可。因此建议将专门学习 Git 的时间控制在 1 天内，一般几个小时就足够了，最快的话只用十几分钟也能上手。</li><li>虽然现在有很多傻瓜式可视化 Git 工具，但还是建议初学 Git 的同学多自己手敲 Git 命令，可以多把自己平时写的练习代码用 Git 上传到 GitHub 上管理，用的多了自然就熟悉了。</li><li>Git 的学习不是一蹴而就的。随着你使用 Git 管理的项目越来越多、工作经验越来越丰富，你对 Git 和 GitHub 的熟练程度才会越来越高。总之，想学好 Git，实践是关键。</li></ol><h2 id="学习路线" tabindex="-1"><a class="header-anchor" href="#学习路线"><span>学习路线</span></a></h2><p>⭐️ - 重点知识 / 强烈推荐<br> 😐 - 了解即可</p><h3 id="大纲" tabindex="-1"><a class="header-anchor" href="#大纲"><span>大纲</span></a></h3><figure><img src="https://cdn.nlark.com/https://www.zzxxccvv.xyzque/0/2022/png/398476/1655990159102-a826251e-fbb3-461b-9318-d560cd32a13d.png#clientId=ua3c55a2b-7415-4&amp;from=paste&amp;height=3197&amp;id=ub68f9a98&amp;originHeight=7033&amp;originWidth=1728&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=1000924&amp;status=done&amp;style=shadow&amp;taskId=u64a6f249-5014-41bc-82a2-ac71f7a368c&amp;title=&amp;width=785.454528430277" alt="Git &amp; GitHub 学习路线 by 灵感虚拟发现现实.png" tabindex="0" loading="lazy"><figcaption>Git &amp; GitHub 学习路线 by 灵感虚拟发现现实.png</figcaption></figure><h3 id="零、无痛上手" tabindex="-1"><a class="header-anchor" href="#零、无痛上手"><span>零、无痛上手</span></a></h3><p>Git 本身只是一个工具，不涉及太多复杂的的理论知识，看了说明书就能用；再加上现在很多主流的开发工具都支持可视化地操作 Git 来管理项目，将它的使用成本降到了最低。所以我们可以随用随学，哪怕之前完全不会，工作用到时也可以直接 <strong>赶鸭子上架</strong> ，做到能用界面来拉取和提交代码、完成开发即可。</p><p>我自己刚开始接触 Git 的时候就是这样，完全没有上网搜教程，就是看别人提交项目的时候用到了这个工具、在编辑器上点几下就可以了，觉得很厉害很方便。然后我就有样学样地用起了这个工具，而且很长一段时间我都是用 GitHub Desktop 来傻瓜式的操作，遇到问题了再上网搜解决方案。</p><p>这里我建议大家无论是否要学习 Git，都可以先把它安装到你的电脑中（直接去官网安装）。因为有可能一些软件或工具会依赖 Git，不装的话后面会出现一些问题。</p><h4 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h4><ol><li>能用软件操作 Git 来拉取和提交代码</li></ol><h4 id="资源" tabindex="-1"><a class="header-anchor" href="#资源"><span>资源</span></a></h4>',40),g={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},_=i("p",null,"Git 可视化管理软件：",-1),G=i("blockquote",null,[i("p",null,"一般情况下不用额外安装软件，用开发工具自带的 Git 可视化功能即可（比如 IDEA、VS Code 等）")],-1),w={href:"https://www.gitkraken.com/%EF%BC%88%E7%82%AB%E9%85%B7%E4%B8%94%E5%8F%8B%E5%A5%BD%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.sourcetreeapp.com/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://tortoisegit.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://desktop.github.com/",target:"_blank",rel:"noopener noreferrer"},H=i("li",null,"Git GUI（安装 Git 后自带）",-1),x=o('<h3 id="一、git-基础" tabindex="-1"><a class="header-anchor" href="#一、git-基础"><span>一、Git 基础</span></a></h3><p>虽然使用可视化工具也可以操作 Git 完成开发工作，但如果不了解 Git 的概念和每个操作具体做了什么，在团队开发中很容易出现问题（比如出现冲突）。</p><p>因此本阶段的目标如下：</p><h4 id="目标-1" tabindex="-1"><a class="header-anchor" href="#目标-1"><span>目标</span></a></h4><ol><li>了解 Git 基本概念和常用命令的作用（理论）</li><li>能够使用 Git 命令来管理和提交项目代码（实践）</li></ol><h4 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点"><span>知识点</span></a></h4><ul><li>⭐️ 基本概念 <ul><li>什么是 Git（版本控制系统）</li><li>什么是 GitHub（代码托管平台）</li><li>Git 和 GitHub 的作用</li><li>Git 和 GitHub 的联系与区别</li></ul></li><li>⭐️ Git 概念 <ul><li>工作区</li><li>暂存区（索引）</li><li>本地版本库</li><li>远程仓库</li><li>Git 文件状态</li><li>版本</li><li>HEAD</li><li>分支</li></ul></li><li>Git 的安装</li><li>Git 常见配置（git config） <ul><li>修改配置 <ul><li>个人信息</li></ul></li><li>查看配置</li></ul></li><li>⭐️ Git 基本操作（开发流程） <ul><li>初始化仓库（git init）</li><li>克隆（git clone）</li><li>暂存（git add）</li><li>提交（git commit）</li><li>推送（git push）</li><li>拉取（git fetch）</li><li>拉取合并（git pull）</li><li>😐 查看状态（git status）</li><li>😐 查看历史（git log）</li></ul></li><li>⭐️ 分支操作 <ul><li>创建分支</li><li>查看分支</li><li>切换分支</li><li>删除分支</li><li>合并分支（git merge）</li></ul></li></ul><h4 id="学习方法" tabindex="-1"><a class="header-anchor" href="#学习方法"><span>学习方法</span></a></h4><p>入门 Git 时没必要买书，而是直接看网上的文档或视频教程，大概花几分钟 ~ 几小时就可以入门了。</p>',9),y={href:"https://backlog.com/git-tutorial/cn/",target:"_blank",rel:"noopener noreferrer"},v=i("figure",null,[i("img",{src:"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1/image-20220623195749271.png#id=qSReP&originHeight=780&originWidth=2008&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=shadow&title=",alt:"",tabindex:"0",loading:"lazy"}),i("figcaption")],-1),z=i("p",null,"或者看 B 站上一些免费的分享，比如下面资源里提到的一节课入门视频，可以帮助你快速了解 Git。",-1),E=i("p",null,[t("但是大家要切记，"),i("strong",null,"一定要跟着教程敲命令"),t(" ，自己走完一套从新建文件到提交文件的完整流程！")],-1),B=i("p",null,"还可以配合可视化工具来观察每个命令执行带来的效果，比如 IDEA 会自动把 Git 托管的文件变成绿色，从而帮助你理解每个命令的作用。",-1),A={href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noopener noreferrer"},q=i("blockquote",null,[i("p",null,"当然，习惯阅读官方文档的同学也可以直接看 Git 官方文档入门。")],-1),F=i("h4",{id:"资源-1",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#资源-1"},[i("span",null,"资源")])],-1),T=i("p",null,"在线文档：",-1),V={href:"https://backlog.com/git-tutorial/cn/%EF%BC%88%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.runoob.com/git/git-tutorial.html",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.liaoxuefeng.com/wiki/896043488029600/",target:"_blank",rel:"noopener noreferrer"},D={href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"},C=i("p",null,"视频教程：",-1),I=i("blockquote",null,[i("p",null,"Git 相关的入门视频太多了，B 站随便一搜一大把")],-1),L={href:"https://www.bilibili.com/video/BV1s3411g7PS",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.bilibili.com/video/BV1KD4y1S7FL",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.bilibili.com/video/BV1vy4y1s7k6",target:"_blank",rel:"noopener noreferrer"},j=i("p",null,"在线游戏：",-1),K={href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noopener noreferrer"},P=i("p",null,"工具：",-1),R={href:"https://backlog.com/git-tutorial/cn/reference/",target:"_blank",rel:"noopener noreferrer"},Z={href:"http://gitref.justjavac.com/",target:"_blank",rel:"noopener noreferrer"},O=o('<h3 id="二、github-基础" tabindex="-1"><a class="header-anchor" href="#二、github-基础"><span>二、GitHub 基础</span></a></h3><p>可以把 GitHub 简单理解为一个资源网站，第一次接触 GitHub 时直接注册一个账号，然后在搜索框里输入你想搜的东西就可以了，不需要任何的教程。但是如果我们想上传代码到 GitHub、更好地用它来管理项目，还是有必要了解一下平台的玩法。</p><h4 id="目标-2" tabindex="-1"><a class="header-anchor" href="#目标-2"><span>目标</span></a></h4><ol><li>熟悉 GitHub 基本操作，并能够使用 GitHub 来管理代码</li><li>了解如何利用 GitHub 搜索和下载项目代码</li><li>了解 GitHub 协作流程；了解开源，并能向开源项目提交代码</li></ol><h4 id="知识点-1" tabindex="-1"><a class="header-anchor" href="#知识点-1"><span>知识点</span></a></h4><ul><li>什么是 GitHub？</li><li>⭐️ 如何访问 GitHub？</li><li>⭐️ 基本概念 <ul><li>仓库</li><li>分支 <ul><li>主分支</li></ul></li><li>README</li><li>Star</li><li>Follow</li><li>账户类型（个人 / 组织）</li></ul></li><li>必备操作 <ul><li>⭐️ 搜索仓库 / 代码</li><li>创建仓库 <ul><li>公开</li><li>私有</li></ul></li><li>Fork 仓库</li><li>Watch 仓库</li><li>⭐️ 上传本地代码</li><li>修改个人信息</li></ul></li><li>⭐️ GitHub Flow 协作流程 <ul><li>克隆 / Fork 仓库</li><li>创建分支</li><li>修改代码</li><li>发起 Pull Request</li><li>Code Review</li><li>Merge 分支</li><li>删除分支</li></ul></li><li>⭐️ 了解 GitHub Issues</li><li>⭐️ 贡献代码流程</li></ul><h4 id="学习方法-1" tabindex="-1"><a class="header-anchor" href="#学习方法-1"><span>学习方法</span></a></h4><p>我们学 GitHub 时主要是了解这个平台提交代码的规则以及和他人协作的方法，因此还是以实践为主。</p>',8),U={href:"https://docs.github.com/cn/get-started/quickstart/hello-world",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.phodal.com/",target:"_blank",rel:"noopener noreferrer"},Q=i("h4",{id:"资源-2",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#资源-2"},[i("span",null,"资源")])],-1),X=i("p",null,"文档：",-1),Y={href:"https://docs.github.com/cn/get-started/quickstart/hello-world",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.phodal.com/",target:"_blank",rel:"noopener noreferrer"},ii={href:"https://github.com/firstcontributions/first-contributions/blob/master/translations/README.chs.md",target:"_blank",rel:"noopener noreferrer"},ti={href:"https://oschina.gitee.io/opensource-guide/",target:"_blank",rel:"noopener noreferrer"},ei=i("p",null,"视频：",-1),li={href:"https://www.bilibili.com/video/BV1hS4y1S7wL",target:"_blank",rel:"noopener noreferrer"},oi={href:"https://www.bilibili.com/video/BV1hS4y1S7wL",target:"_blank",rel:"noopener noreferrer"},ni={href:"https://www.bilibili.com/video/BV1Ki4y1T7Cu",target:"_blank",rel:"noopener noreferrer"},ai=i("p",null,"工具：",-1),ri={href:"https://github.com/dotnetcore/FastGithub",target:"_blank",rel:"noopener noreferrer"},si={href:"https://training.github.com/downloads/zh_CN/github-git-cheat-sheet/",target:"_blank",rel:"noopener noreferrer"},hi=o('<h3 id="三、git-进阶" tabindex="-1"><a class="header-anchor" href="#三、git-进阶"><span>三、Git 进阶</span></a></h3><p>企业开发项目可能会比较复杂，往往会面临两个问题：</p><ol><li>项目更大，更难管理</li><li>协作人员更多，更容易出现冲突</li></ol><p>如果协作开发时出现了代码冲突，又不了解如何解决的话，就很可能导致提交了错误的代码影响项目，或者丢失自己写过的代码。</p><p>因此我们需要进一步了解 Git，学习实际工作中可能要用到的操作、经验和技巧，更好地管理团队项目和协作。</p><h4 id="目标-3" tabindex="-1"><a class="header-anchor" href="#目标-3"><span>目标</span></a></h4><ol><li>学习 Git 高级操作，尤其是能够熟练地规避和解决冲突</li><li>了解企业常用的 Git 协作流程和规范，能独立管理项目</li></ol><h4 id="知识点-2" tabindex="-1"><a class="header-anchor" href="#知识点-2"><span>知识点</span></a></h4><ul><li>高级操作 <ul><li>标签（git tag）</li><li>检出（git checkout）</li><li>⭐️ 贮藏（git stash）</li><li>清理（git clean）</li><li>变基（git rebase）</li><li>重置（git reset）</li><li>还原（git revert）</li><li>😐 检索（git grep）</li><li>😐 展示差异（git diff）</li><li>😐 溯源（git blame）</li><li>😐 参考日志（git reflog）</li><li>😐 交互式命令行（-i 参数）</li></ul></li><li>⭐️ 预防冲突</li><li>⭐️ 解决冲突（重中之重）</li><li>⭐️ 配置 SSH</li><li>子模块</li><li>Git 钩子 <ul><li>提交钩子（pre-commit）</li></ul></li><li>⭐️ 忽略提交（Gitignore）</li><li>⭐️ cherry-pick</li><li>分布式工作流程</li><li>Git worktree</li><li>Git Flow</li><li>😐 Git 内部原理</li><li>Monorepo</li><li>了解其他版本控制系统，和 Git 对比</li></ul><h4 id="学习方法-2" tabindex="-1"><a class="header-anchor" href="#学习方法-2"><span>学习方法</span></a></h4><p>其实我们在大多数情况下是用不到上面那些高级命令的，但是一定要知道有这么个命令和用法，在关键时刻才能想起来，然后再去通过官方文档和百度去搜详情即可。</p><p>所以，建议大家有空完整地阅读一遍 Git 的官方文档（支持中文、详细又权威），有些地方看不懂或记不住也没关系（比如像 reset 的几种模式），有个大致的印象就行。</p><p>学好 Git 最主要的方法还是多实操，比如实际工作中最实用的技能之一 —— 解决代码冲突，只有经历过的同学才会懂。不过如今的编辑器基本都自带了可视化解决冲突的功能，通过红绿等颜色来区分代码，可比我们用命令行要方便和清晰多了，所以也不用去记忆相关的命令。</p><p>另外，建议大家去网上了解一下企业开发中常用的 Git 协作机制，比如怎么定义分支、怎么个提交代码的流程等，如图：</p><figure><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1/webp#id=nopW5&amp;originHeight=341&amp;originWidth=586&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=shadow&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>还可以了解一些 “先进” 的协作方式，比如一些大公司在采用的 Monorepo（单仓 / 大仓）方案，了解它和传统项目管理模式的优缺点。</p><p>此外，大家感兴趣的话也可以深入下 Git 工具的原理，如果能够自己做出一个类似的系统，相信在简历上也会是个不错的项目~</p><h4 id="资源-3" tabindex="-1"><a class="header-anchor" href="#资源-3"><span>资源</span></a></h4>',18),ci={href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"},pi={href:"http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html",target:"_blank",rel:"noopener noreferrer"},ui={href:"https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow",target:"_blank",rel:"noopener noreferrer"},di={href:"https://www.jianshu.com/p/c10d0b8c5581",target:"_blank",rel:"noopener noreferrer"},bi=i("p",null,"工具：",-1),gi={href:"https://www.php.cn/manual/view/34943.html",target:"_blank",rel:"noopener noreferrer"},_i=o('<h3 id="四、github-进阶" tabindex="-1"><a class="header-anchor" href="#四、github-进阶"><span>四、GitHub 进阶</span></a></h3><p>如今 GitHub 的能力已经非常强了，除了代码的管理和检索外，它还集成了各种辅助团队开发和运营的功能。</p><h4 id="目标-4" tabindex="-1"><a class="header-anchor" href="#目标-4"><span>目标</span></a></h4><ol><li>按需学习更多 GitHub 功能，提升研发效率、更好地管理项目</li><li>尝试用心维护和推广自己的 GitHub 项目</li></ol><h4 id="知识点-3" tabindex="-1"><a class="header-anchor" href="#知识点-3"><span>知识点</span></a></h4><ul><li>开发 <ul><li>⭐️ 配置 SSH 拉取</li><li>😐 GitHub 快捷键</li><li>😐 GitHub 命令面板</li><li>😐 GitHub Apps</li><li>代码安全</li></ul></li><li>协作 <ul><li>⭐️ GitHub Codespaces</li><li>GitHub Discussions</li><li>Pull Requests</li></ul></li><li>项目管理 <ul><li>Organizations 组织</li><li>GitHub Issues 问题反馈</li><li>😐 GitHub Projects 项目管理</li><li>Insights 数据分析</li><li>贡献者管理</li><li>开源协议</li></ul></li><li>DevOps <ul><li>⭐️ GitHub Pages 网站托管</li><li>Gitpod 代码托管</li><li>GitHub Actions</li><li>😐 GitHub Packages</li><li>GitHub Webhook</li></ul></li><li>😐 Git 私服搭建 <ul><li>GitLab</li><li>Gogs</li></ul></li></ul><h4 id="学习方法-3" tabindex="-1"><a class="header-anchor" href="#学习方法-3"><span>学习方法</span></a></h4><p>进阶 GitHub 最好的方式就是 <strong>阅读官方文档</strong> ！</p><p>因为首先官方文档通常比任何教程都 <strong>全面、权威、准确</strong> ；再加上 GitHub 的更新迭代很快、时不时会推出一些新功能，导致网上的教程和文章很难做到实时和官方同步。</p><p>而 GitHub 的官方文档不仅支持中文，而且写的非常通俗好懂，本身就是一个贴心的教程了。所以建议大家跟着文档来学习，完整阅读一遍后，相信你会学到很多之前完全没关注过的 GitHub 功能，帮助自己更好地利用这个平台。</p><p>此外，大家也可以多看一些其他同学分享的 GitHub 小技巧，比如我之前分享过的：按句号键就能用 web 编辑器直接打开项目，从而给我们带来极大的方便。（下面也给大家列举了一些我之前分享过的 GitHub 骚操作）</p><h4 id="资源-4" tabindex="-1"><a class="header-anchor" href="#资源-4"><span>资源</span></a></h4><p>文档：</p>',13),Gi={href:"https://docs.github.com/cn",target:"_blank",rel:"noopener noreferrer"},wi={href:"https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/",target:"_blank",rel:"noopener noreferrer"},mi={href:"https://www.bilibili.com/video/BV1q54y1f7h6",target:"_blank",rel:"noopener noreferrer"},fi={href:"https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247491908&idx=1&sn=568e8c0dcb54a610d886eb992d424273&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},ki={href:"https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247495440&idx=1&sn=99147cdcb7c881c9d983e7b2373abcdb&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Hi=i("p",null,"工具：",-1),xi={href:"https://docs.github.com/cn/get-started/using-github/keyboard-shortcuts",target:"_blank",rel:"noopener noreferrer"},yi={href:"https://docs.github.com/cn/get-started/using-github/github-command-palette",target:"_blank",rel:"noopener noreferrer"},vi=o('<h2 id="面试考点" tabindex="-1"><a class="header-anchor" href="#面试考点"><span>面试考点</span></a></h2><p>其实 Git 在面试中的占比一般是很低的，至少我秋招 20 多轮面试中 1 次都没被问到过。所以大家不用刻意去准备，多去用它、积累经验就好了。</p><p>不过时间足够的同学也可以了解一下常见的面试题，比如下面这些：</p><h4 id="理论" tabindex="-1"><a class="header-anchor" href="#理论"><span>理论</span></a></h4><ol><li>简述 Git 的原理和工作流程</li><li>什么是版本控制系统？为什么需要版本控制系统？</li><li>git fetch 和 git pull 命令的区别？</li><li>git rebase 和 git merge 命令的区别？</li><li>什么是 Git Flow，它有什么好处？</li><li>什么是暂存区？Git 为什么需要暂存区？</li></ol><h4 id="实践" tabindex="-1"><a class="header-anchor" href="#实践"><span>实践</span></a></h4><ol><li>分享下你在团队中使用 Git 协作开发的流程（从拉取项目到上线）</li><li>如何控制某些文件不被提交？</li><li>什么情况下提交会冲突，如何解决冲突？</li><li>不小心改错了代码、删除了文件，如何恢复？</li><li>不小心提交错了文件，如何撤销？</li><li>团队开发中，如何区分和管理分支？</li><li>如果让你负责团队，会怎么管理项目的代码？</li><li>如何防止错误的代码提交？</li></ol>',7);function zi(Ei,Bi){const e=a("ExternalLinkIcon");return r(),s("div",null,[c,i("blockquote",null,[i("p",null,[t("本文作者："),i("a",p,[t("灵感虚拟发现现实"),l(e)])]),i("p",null,[t("本站地址："),i("a",u,[t("https://www.zzxxccvv.xyz"),l(e)])])]),i("p",null,[t("不喜欢阅读文字的同学可以看视频讲解："),i("a",d,[t("https://www.bilibili.com/video/BV1KZ4y1e7cG"),l(e)])]),b,i("p",null,[t("⭐️ Git 官方下载："),i("a",g,[t("https://git-scm.com/downloads"),l(e)])]),_,G,i("ul",null,[i("li",null,[t("⭐️ GitKraken："),i("a",w,[t("https://www.gitkraken.com/（炫酷且友好）"),l(e)])]),i("li",null,[t("Sourcetree："),i("a",m,[t("https://www.sourcetreeapp.com/"),l(e)])]),i("li",null,[t("TortoiseGit："),i("a",f,[t("https://tortoisegit.org/"),l(e)])]),i("li",null,[t("GitHub Desktop："),i("a",k,[t("https://desktop.github.com/"),l(e)])]),H]),x,i("p",null,[t("比如 "),i("a",y,[t("猴子都能懂的 Git 入门"),l(e)]),t(" ，图文并茂、通俗易懂，看完入门篇就足够了：")]),v,z,E,B,i("p",null,[t("Git 的分支概念还是很重要的，大家可以使用 "),i("a",A,[t("Learning Git Branching"),l(e)]),t(" 这个在线游戏来学习和理解分支。")]),q,F,T,i("ul",null,[i("li",null,[t("⭐️ 猴子都能懂的 Git 入门："),i("a",V,[t("https://backlog.com/git-tutorial/cn/（强烈推荐）"),l(e)])]),i("li",null,[t("菜鸟教程："),i("a",N,[t("https://www.runoob.com/git/git-tutorial.html"),l(e)])]),i("li",null,[t("廖雪峰的教程："),i("a",S,[t("https://www.liaoxuefeng.com/wiki/896043488029600/"),l(e)])]),i("li",null,[t("Git 简明指南："),i("a",D,[t("http://rogerdudler.github.io/git-guide/index.zh.html"),l(e)]),t("（几分钟看一遍就好，可以用来复习）")])]),C,I,i("ul",null,[i("li",null,[t("一节课入门："),i("a",L,[t("https://www.bilibili.com/video/BV1s3411g7PS"),l(e)]),t("（18 分钟）")]),i("li",null,[t("一节课入门："),i("a",M,[t("https://www.bilibili.com/video/BV1KD4y1S7FL"),l(e)]),t("（10 分钟）")]),i("li",null,[t("5h 打通 Git 全套教程："),i("a",W,[t("https://www.bilibili.com/video/BV1vy4y1s7k6"),l(e)]),t("（较完整，时间多的话可以看）")])]),j,i("ul",null,[i("li",null,[t("⭐️ Learning Git Branching："),i("a",K,[t("https://learngitbranching.js.org/?locale=zh_CN"),l(e)]),t("（帮助你学习 Git 分支的用法）")])]),P,i("ul",null,[i("li",null,[t("⭐️ Git 命令大全："),i("a",R,[t("https://backlog.com/git-tutorial/cn/reference/"),l(e)]),t("（适合收藏）")]),i("li",null,[t("Git 参考手册："),i("a",Z,[t("http://gitref.justjavac.com/"),l(e)]),t("（只列举了常用的命令，不是很全）")])]),O,i("p",null,[t("推荐先在 B 站上找一个 GitHub 的短视频分享，了解下 GitHub 是个啥，大概咋用（下面有推荐视频）。然后再按照 GitHub  官方提供的 "),i("a",U,[t("Hello World 入门教程"),l(e)]),t(" 来实操一遍流程，基本就了解大家是如何在 GitHub 上协作的了。")]),i("p",null,[t("之后我建议大家可以像读课外书一样阅读下 "),i("a",J,[t("《GitHub 漫游指南》"),l(e)]),t(" ，能够比较全面地加深你对 GitHub 的了解。")]),Q,X,i("ul",null,[i("li",null,[t("⭐️ GitHub 官方 Hello World 入门："),i("a",Y,[t("https://docs.github.com/cn/get-started/quickstart/hello-world"),l(e)]),t("（带你体验一次完整的 GitHub 开发流程）")]),i("li",null,[t("⭐️ GitHub 漫游指南："),i("a",$,[t("https://github.phodal.com/"),l(e)]),t("（很多作者个人的实战经验，建议当课外书读，受益匪浅）")]),i("li",null,[t("⭐️ 教你给开源项目贡献代码："),i("a",ii,[t("https://github.com/firstcontributions/first-contributions/blob/master/translations/README.chs.md"),l(e)])]),i("li",null,[t("⭐️ 开源指北："),i("a",ti,[t("https://oschina.gitee.io/opensource-guide/"),l(e)]),t("（给开源新手的保姆级开源百科，建议当课外书读）")])]),ei,i("ul",null,[i("li",null,[t("一节课入门："),i("a",li,[t("https://www.bilibili.com/video/BV1hS4y1S7wL"),l(e)])]),i("li",null,[t("5 分钟入门："),i("a",oi,[t("https://www.bilibili.com/video/BV1hS4y1S7wL"),l(e)])]),i("li",null,[t("如何利用 GitHub 找到优质项目："),i("a",ni,[t("https://www.bilibili.com/video/BV1Ki4y1T7Cu"),l(e)]),t("（灵感虚拟发现现实早期作品，特么青涩！）")])]),ai,i("ul",null,[i("li",null,[t("⭐️ 如何更快地访问 GitHub："),i("a",ri,[t("https://github.com/dotnetcore/FastGithub"),l(e)]),t("（进不去可以自行百度：fast github）")]),i("li",null,[t("⭐️ GitHub 备忘清单："),i("a",si,[t("https://training.github.com/downloads/zh_CN/github-git-cheat-sheet/"),l(e)]),t("（包含了常用命令）")])]),hi,i("ul",null,[i("li",null,[t("⭐️ Git 官方文档："),i("a",ci,[t("https://git-scm.com/book/zh/v2"),l(e)]),t("（强烈推荐，有图有文，全面详细）")]),i("li",null,[t("Git Flow 演示学习："),i("a",pi,[t("http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html"),l(e)])]),i("li",null,[t("Git Flow 学习："),i("a",ui,[t("https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow"),l(e)])]),i("li",null,[t("Monorepo 学习："),i("a",di,[t("https://www.jianshu.com/p/c10d0b8c5581"),l(e)])])]),bi,i("ul",null,[i("li",null,[t("Git 中文开发手册："),i("a",gi,[t("https://www.php.cn/manual/view/34943.html"),l(e)]),t("（可以用来查命令）")])]),_i,i("ul",null,[i("li",null,[t("⭐️ GitHub 官方文档："),i("a",Gi,[t("https://docs.github.com/cn"),l(e)])]),i("li",null,[t("⭐️ GitHub 秘籍："),i("a",wi,[t("https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/"),l(e)]),t("（收录了一些 Git 和 Github 非常酷同时又少有人知的功能）")]),i("li",null,[t("⭐️ GitHub 隐藏技巧："),i("a",mi,[t("https://www.bilibili.com/video/BV1q54y1f7h6"),l(e)])]),i("li",null,[t("让你的 GitHub 秒变高大上："),i("a",fi,[t("https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247491908&idx=1&sn=568e8c0dcb54a610d886eb992d424273&scene=21#wechat_redirect"),l(e)])]),i("li",null,[t("GitHub 骚操作："),i("a",ki,[t("https://mp.weixin.qq.com/s?__biz=MzI1NDczNTAwMA==&mid=2247495440&idx=1&sn=99147cdcb7c881c9d983e7b2373abcdb&scene=21#wechat_redirect"),l(e)])])]),Hi,i("ul",null,[i("li",null,[t("GitHub 快捷键："),i("a",xi,[t("https://docs.github.com/cn/get-started/using-github/keyboard-shortcuts"),l(e)])]),i("li",null,[t("GitHub 命令面板："),i("a",yi,[t("https://docs.github.com/cn/get-started/using-github/github-command-palette"),l(e)])])]),vi])}const Fi=n(h,[["render",zi],["__file","Git_GitHub学习路线 by 灵感虚拟发现现实.html.vue"]]),Ti=JSON.parse('{"path":"/guide/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/Git_GitHub%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%20by%20%E7%81%B5%E6%84%9F%E8%99%9A%E6%8B%9F%E5%8F%91%E7%8E%B0%E7%8E%B0%E5%AE%9E.html","title":"Git & GitHub 学习路线 by 灵感虚拟发现现实","lang":"zh-CN","frontmatter":{"description":"Git & GitHub 学习路线 by 灵感虚拟发现现实 本文作者：灵感虚拟发现现实 本站地址：https://www.zzxxccvv.xyz 不喜欢阅读文字的同学可以看视频讲解：https://www.bilibili.com/video/BV1KZ4y1e7cG 介绍 Git / GitHub 是什么？ Git 是目前最主流的 分布式版本控制系...","head":[["meta",{"property":"og:url","content":"https://www.zzxxccvv.xyz/guide/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/Git_GitHub%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%20by%20%E7%81%B5%E6%84%9F%E8%99%9A%E6%8B%9F%E5%8F%91%E7%8E%B0%E7%8E%B0%E5%AE%9E.html"}],["meta",{"property":"og:site_name","content":"灵感虚拟发现现实的编程宝典"}],["meta",{"property":"og:title","content":"Git & GitHub 学习路线 by 灵感虚拟发现现实"}],["meta",{"property":"og:description","content":"Git & GitHub 学习路线 by 灵感虚拟发现现实 本文作者：灵感虚拟发现现实 本站地址：https://www.zzxxccvv.xyz 不喜欢阅读文字的同学可以看视频讲解：https://www.bilibili.com/video/BV1KZ4y1e7cG 介绍 Git / GitHub 是什么？ Git 是目前最主流的 分布式版本控制系..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.nlark.com/https://www.zzxxccvv.xyzque/0/2022/png/398476/1655990159102-a826251e-fbb3-461b-9318-d560cd32a13d.png#clientId=ua3c55a2b-7415-4&from=paste&height=3197&id=ub68f9a98&originHeight=7033&originWidth=1728&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1000924&status=done&style=shadow&taskId=u64a6f249-5014-41bc-82a2-ac71f7a368c&title=&width=785.454528430277"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T13:40:09.000Z"}],["meta",{"property":"article:author","content":"虚拟发现现实"}],["meta",{"property":"article:modified_time","content":"2024-04-12T13:40:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git & GitHub 学习路线 by 灵感虚拟发现现实\\",\\"image\\":[\\"https://cdn.nlark.com/https://www.zzxxccvv.xyzque/0/2022/png/398476/1655990159102-a826251e-fbb3-461b-9318-d560cd32a13d.png#clientId=ua3c55a2b-7415-4&from=paste&height=3197&id=ub68f9a98&originHeight=7033&originWidth=1728&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1000924&status=done&style=shadow&taskId=u64a6f249-5014-41bc-82a2-ac71f7a368c&title=&width=785.454528430277\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1/image-20220623195749271.png#id=qSReP&originHeight=780&originWidth=2008&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=shadow&title=\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1/webp#id=nopW5&originHeight=341&originWidth=586&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=shadow&title=\\"],\\"dateModified\\":\\"2024-04-12T13:40:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"虚拟发现现实\\",\\"url\\":\\"https://www.zzxxccvv.xyz/\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":3,"title":"Git / GitHub 是什么？","slug":"git-github-是什么","link":"#git-github-是什么","children":[]},{"level":3,"title":"为什么要用 Git / GitHub？","slug":"为什么要用-git-github","link":"#为什么要用-git-github","children":[]}]},{"level":2,"title":"学习条件","slug":"学习条件","link":"#学习条件","children":[]},{"level":2,"title":"学习建议","slug":"学习建议","link":"#学习建议","children":[]},{"level":2,"title":"学习路线","slug":"学习路线","link":"#学习路线","children":[{"level":3,"title":"大纲","slug":"大纲","link":"#大纲","children":[]},{"level":3,"title":"零、无痛上手","slug":"零、无痛上手","link":"#零、无痛上手","children":[]},{"level":3,"title":"一、Git 基础","slug":"一、git-基础","link":"#一、git-基础","children":[]},{"level":3,"title":"二、GitHub 基础","slug":"二、github-基础","link":"#二、github-基础","children":[]},{"level":3,"title":"三、Git 进阶","slug":"三、git-进阶","link":"#三、git-进阶","children":[]},{"level":3,"title":"四、GitHub 进阶","slug":"四、github-进阶","link":"#四、github-进阶","children":[]}]},{"level":2,"title":"面试考点","slug":"面试考点","link":"#面试考点","children":[]}],"git":{"createdTime":1712929209000,"updatedTime":1712929209000,"contributors":[{"name":"virtualfound","email":"2849492659@qq.com","commits":1}]},"readingTime":{"minutes":17.92,"words":5377},"filePathRelative":"guide/学习路线/Git&GitHub学习路线 by 灵感虚拟发现现实.md","localizedDate":"2024年4月12日","excerpt":"\\n<blockquote>\\n<p>本文作者：<a href=\\"https://www.zzxxccvv.xyz\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">灵感虚拟发现现实</a></p>\\n<p>本站地址：<a href=\\"https://www.zzxxccvv.xyz\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.zzxxccvv.xyz</a></p>\\n</blockquote>\\n<p>不喜欢阅读文字的同学可以看视频讲解：<a href=\\"https://www.bilibili.com/video/BV1KZ4y1e7cG\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.bilibili.com/video/BV1KZ4y1e7cG</a></p>","autoDesc":true}');export{Fi as comp,Ti as data};
